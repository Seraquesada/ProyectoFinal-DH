stages:
  - build
  - deploy

variables:
  S3_BUCKET_DEV: ${DEV_S3_BUCKET}


.npm_build:
  image: node:latest
  script: |
    cd ./front-end
    npm cache clean --force
    npm install # Install all dependencies
    npm run build # Build command
  artifacts:
    paths:
      - ./front-end/dist
  only:
    refs:
      - dev
      
build_front:
  extends: .npm_build
  stage: build
  before_script:
    - export APP_ENV="dev"
  only:
    refs:
      - dev

build_back:
  stage: build
  image: maven:latest
  script: | 
    cd ./back-end/ProyectoIntegrador/ProyectoIntegrador
    mvn package -DskipTests=true
  artifacts:
    paths:
      - "**/target/*.jar"
  only:
    refs:
      - dev
  tags: 
    - back-end

.deploy_aws:
  image: python:latest
  script: |
    pip install awscli #Install awscli tools
    aws s3 sync ./front-end/dist s3://${S3_BUCKET}

deploy_front:
  extends: .deploy_aws
  stage: deploy
  dependencies:
    - build_front
  before_script:
    - export S3_BUCKET=${S3_BUCKET_DEV}
  only:
    refs:
      - dev

deploy_back:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $EC2_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp -o StrictHostKeyChecking=no -r -v ./back-end/ProyectoIntegrador/ProyectoIntegrador/target/ProyectoIntegrador-0.0.1-SNAPSHOT.jar ${SSH_USER}@${DEPLOY_SERVER_IP}:~
    - ssh ${SSH_USER}@${DEPLOY_SERVER_IP} "sudo ln -s /var/ProyectoIntegrador-0.0.1-SNAPSHOT/ProyectoIntegrador-0.0.1-SNAPSHOT.jar /etc/init.d/ProyectoIntegrador-0.0.1-SNAPSHOT"
    - ssh ${SSH_USER}@${DEPLOY_SERVER_IP} "sudo systemctl start ProyectoIntegrador-0.0.1-SNAPSHOT.service"
  only:
    refs:
      - dev
  tags: 
    - back-end
  

